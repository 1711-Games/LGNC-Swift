Shared:
  Entities:
    # BEGIN Shared/Entities/__root__.yml
    Empty:
      Fields: {}
    # END Shared/Entities/__root__.yml
    Good:
      # BEGIN Shared/Entities/Good.yml
      Fields:
        ID: Int
        name: String
        description:
          Type: String
          DefaultNull: True
        price: Float
      # END Shared/Entities/Good.yml
  Fields:
    # BEGIN Shared/Fields.yml
    UUID: &UUID
      Type: String
      Validators: [ UUID ]
    Date: &Date
      Type: String
      Validators: [ Date ]
    Sex: &Sex
      Type: String
      AllowedValues:
        - Male
        - Female
        - Attack helicopter
    password1: &password1
      Type: String
      Validators:
        MinLength:
          Length: 6
          Message: Password must be at least {Length} characters long
        MaxLength:
          Length: 64
          Message: Password must be less than {Length} characters long
    password2: &password2
      Type: String
      Validators:
        IdenticalWith:
          Field: password1
          Message: Passwords must match
    # END Shared/Fields.yml
  Validators:
    # BEGIN Shared/Validators.yml
    EmailValidator: &EmailValidator
      Expression: ^.+@.+\\..+$
      Message: Invalid email format
    # END Shared/Validators.yml
Services:
  Auth:
    # BEGIN Services/Auth/__root__.yml
    Info:
      foo: bar
    Transports:
      LGNS: 27020
      HTTP: 8080
    
    # END Services/Auth/__root__.yml
    Contracts:
      # BEGIN Services/Auth/Contracts.yml
      Authenticate:
        Transports: [ LGNS, HTTP ]
        Request:
          Fields:
            token: String
        Response:
          Fields:
            IDUser:
              Type: Int
              DefaultNull: True
      
      # END Services/Auth/Contracts.yml
      Login:
        # BEGIN Services/Auth/Contracts/Login.yml
        Transports: [ HTTP, LGNS ]
        Request:
          Fields:
            email:
              Type: String
              MissingMessage: Please enter email
            password:
              Type: String
              MissingMessage: Please enter password
            recaptchaToken:
              Type: String
              DefaultNull: True
        Response:
          Fields:
            token: String
            userID: Int
        
        # END Services/Auth/Contracts/Login.yml
      Signup:
        # BEGIN Services/Auth/Contracts/Signup.yml
        Transports: [ HTTP, LGNS ]
        Request:
          Fields:
            username:
              Type: String
              Validators:
                Regex:
                  Expression: ^[a-zA-Zа-яА-Я0-9_\\- ]+$
                  Message: Username must only consist of letters, numbers and underscores
                MinLength: 3
                MaxLength: 24
                Callback:
                  Errors:
                    - { Code: 10001, Message: User with given username already exists }
            email:
              Type: String
              Validators:
                Regex: *EmailValidator
                Callback:
                  Errors:
                    - { Code: 10002, Message: User with given email already exists }
            password1: *password1
            password2: *password2
            sex: *Sex
            language:
              Type: String
              AllowedValues:
                - en
                - ru
            recaptchaToken: String
        Response: Empty
        
        # END Services/Auth/Contracts/Signup.yml
  Shop:
    # BEGIN Services/Shop/__root__.yml
    Info:
      baz: sas
    Transports:
      LGNS: 27021
      HTTP: 8080
    
    # END Services/Shop/__root__.yml
    Contracts:
      # BEGIN Services/Shop/Contracts.yml
      
      # END Services/Shop/Contracts.yml
      Goods:
        # BEGIN Services/Shop/Contracts/Goods.yml
        Transports: [ HTTP, LGNS ]
        Request: Empty
        Response:
          Fields:
            list: List[Good]
        
        # END Services/Shop/Contracts/Goods.yml
